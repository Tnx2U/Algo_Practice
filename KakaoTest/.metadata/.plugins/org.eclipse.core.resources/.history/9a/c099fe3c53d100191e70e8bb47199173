import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Test3 {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int[][] key = { { 0, 0, 0 }, { 1, 0, 0 }, { 0, 1, 1 } };
		int[][] lock = { { 1, 1, 1 }, { 1, 1, 0 }, { 1, 0, 1 } };

	}

	public boolean solution(int[][] key, int[][] lock) {
		for (int i = 0; i < 4; i++) {
			if (fit(key, lock)) {
				return true;
			}
			key = rotate(key);
		}

		return false;
	}

	// 회전 함수 출처 : https://cbts.tistory.com/80 [IT일기장]
	private int[][] rotate(int[][] key) {
		for (int row = 0; row < key.length; row++) {
			for (int col = 0; col < key.length; col++) {
				key[row][col] = key[col][key.length - row];
			}
		}
		return key;
	}

	private boolean fit(int[][] key, int[][] lock) {
		List<Point> cdd = new ArrayList<>();
		Point p_srt = new Point(-1, -1);
		for (int i = key.length-1; i >= 0; i--) {
			for (int j = key.length-1; j >= 0; j--) {
				if(key[i][j] == 1) {
					p_srt = new Point(i, j);
					break;
				}
			}
			if(p_srt.x != -1) {
				break;
			}
		}
		
		for (int i = 0; i < lock.length; i++) {
			for (int j = 0; j < lock.length; j++) {
				if(lock[i][j] == 0) {
					cdd.add(new Point(i, j));
					break;
				}
			}
			if(l_srt.x != -1) {
				break;
			}
		}
		
		for (int i = 0; i < lock.length; i++) {
			
		}
		
		return false;
	}
	static class Point{
		int x;
		int y;
		public Point(int y, int x) {
			this.x = x;
			this.y = y;
		}
	}
}
